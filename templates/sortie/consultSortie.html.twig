{% extends 'base.html.twig' %}

{% block title %}Sortie | {{ parent() }}{% endblock %}

{% block body %}
<div id="sortiesFilterss" class="card">
    <fieldset >
    <h3>{{ sortie.name }}</h3>
    </fieldset>
</div>
    <br>
    <form>
        <div class="form-group">
            <div class="container">
                {% if sortie.privee is same as (true)  %}
                <p><span style="font-weight: bold">Sortie Privée </span></p>
                {% endif %}
                <p><span style="font-weight: bold">Organisateur de la sortie : </span> <a
                            href="{{ path('user_show_profile', {'id': sortie.organisateur.id}) }}">{{ sortie.organisateur.firstname }} {{ sortie.organisateur.lastname }}</a>
                </p>
                <p>
                    <span style="font-weight: bold">Date et heure de la sortie : </span>{{ sortie.dateTimeStart |date("Y-m-d h:i") }}
                </p>
                <p>
                    <span style="font-weight: bold">Date limite d'inscription : </span>{{ sortie.deadlineRegistration |date("Y-m-d h:i") }}
                </p>
                <p><span style="font-weight: bold">Nombre de place : </span>{{ sortie.maxNumberRegistration }}</p>
                <p><span style="font-weight: bold">Durée : </span>{{ sortie.duration }}</p>
                <p><span style="font-weight: bold">Description et infos : </span>{{ sortie.description }}</p>
                <div class="row">
                    <div class="col-6">
                        <p><span style="font-weight: bold">Lieu : </span>{{ sortie.lieu.name }}</p>
                        <p><span style="font-weight: bold">Adresse : </span>{{ sortie.lieu.street }}</p>
                        <p><span style="font-weight: bold">Code Postal : </span>{{ sortie.lieu.ville.zip }}</p>
                        <p><span style="font-weight: bold">Ville : </span>{{ sortie.lieu.ville.name }}</p>
                        {% if data|default is not empty %}
                            <p><span style="font-weight: bold">Coordonnées GPS : </span>{{ data[0].centre.coordinates[1] }}
                            / {{ data[0].centre.coordinates[0] }}</p>
                        {% endif %}
                    </div>
                    <div id="myMap" class="mt-4 text-center col-6"></div>
                </div>
            </div>
            {% if sortie.deadlineRegistration >=  date()  and sortie.privee is same as (false)%}
                <a class="btn-floating btn-small waves-effect waves-light right black"
                href="{{ path('sortie_inscription',{'id': sortie.id, 'csrf': csrf_token('sortie_inscription_'~sortie.id)}) }}">M'inscrire</a>
            {% endif %}
            {% if sortie.id in userSortie and sortie.dateTimeStart >= date() %}
                <a class="btn-floating btn-small waves-effect waves-light right black"
                href="{{ path('sortie_remove_inscription',{'id': sortie.id, 'csrf': csrf_token('sortie_remove_inscription_'~sortie.id)}) }}">Me désister</a>
            {% endif %}
            {% if app.user.id == sortie.organisateur.id and sortie.dateTimeStart >= date() %}
                <a class="btn-floating btn-small waves-effect waves-light right black"
                   href="{{ path('sortie_update',{'id': sortie.id, 'csrf': csrf_token('sortie_update_'~sortie.id)}) }}">Modifier la sortie</a>
            {% endif %}

        </div>
    </form>
    <div class="form-group">
        <div class="container">
        {% if sortie.privee is same as (true) and sortie.organisateur.id == app.user.id%}
            <label style="font-weight: bold" for="addParticipant">Ajouter un participant : </label>
            <input type="text" name="addParticipant" id="addParticipant" placeholder="Pseudo">
            <button id="add" onclick="ajoutParticipantAjax()" class="btn btn-primary">Ajouter</button>
        {% endif %}
        </div>
    </div>
    <table>
        <thead>
        <tr>
            <th class="th-sm">Pseudo</th>
            <th class="th-sm">Prénom et Nom</th>
        </tr>
        </thead>
        <tbody id="contenuTableau">
        {% for user in usersList %}
            <tr>
                <td><a href="{{ path('user_show_profile', {'id': user.id}) }}">{{ user.username }}</a></td>
                <td>{{ user.firstname }} {{ user.lastname }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <br><br><br>

    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>
    {% if data|default is not empty %}
    <script>
            //On initialise la latitude et la longitude (centre de la carte)
            let lat = {{ data[0].centre.coordinates[1] }};
            let lon = {{ data[0].centre.coordinates[0] }};

            // On initialise la carte
            const map = L.map('myMap').setView([lat, lon], 11);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
            // Il est toujours bien de laisser le lien vers la source des données
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(map);

            //Ajout d'un marqueur
            const marker = L.marker([lat, lon]).addTo(map);
            //Ajout d'une popup
            marker.bindPopup("<h3>{{ sortie.lieu.name }}</h3>" +
                "<address>{{ sortie.lieu.street}}</address>");
    </script>
    {% endif %}

{% endblock %}

{% block javascript %}

function ajoutParticipantAjax() {
    var username = $('#addParticipant').val();
    $.ajax({
        url: '{{ path('search_user_ajax')}}/' + username,
                method:"post",
                data :{
                    'sortie': {{ sortie.id }},
                },
                async: true,
            }).done(function (msg) {
            console.log(msg);
                refreshUserList(msg);
            }).fail(function (){
                alert("Ce participant n'existe pas");
            });
    }

    function refreshUserList(msg)
    {
            var elTr = $('<tr></tr>'); //création d'un élément tr
            var eltTdPseudo = $('<td></td>').html("<a href='/" + msg.userId +" '>"+ msg.username + "</a>" ); //création d'un élément td pour le pseudo avec le lien du profil
            var eltTdFirstLast = $('<td></td>').text(msg.firstname +" "+ msg.lastname ); // création d'un élément td pour le prénom et le nom

            $(elTr).append(eltTdPseudo, eltTdFirstLast );
            $('#contenuTableau').append(elTr);
    }

{% endblock %}


